apiVersion: v1
kind: Secret
metadata:
  name: tweek-secrets
data:
  tweek_pfx_public_key: {{ .Values.secrets.tweek_pfx_public_key }}
  tweek_ssh_public_key: {{ .Values.secrets.tweek_ssh_public_key }}
  tweek_ssh_private_key: {{ .Values.secrets.tweek_ssh_private_key }}
  minio_secret_key: {{ .Values.secrets.minio_secret_key }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:alpine
        args: ["--appendonly", "yes"]
        ports:
        - containerPort: 6379
        volumeMounts:
        - mountPath: /data
          name: dbvolume
      volumes:
      - name: dbvolume
        persistentVolumeClaim:
          claimName: dbvolume
---
kind: Service
apiVersion: v1
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
    - port: 6379
      targetPort: 6379
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: dbvolume
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.dbvolume.size }}
  storageClassName: {{ .Values.dbvolume.storageClass }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: minio
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio
        args:
        - server
        - /data
        env:
        - name: MINIO_ACCESS_KEY
          value: AKIAIOSFODNN7EXAMPLE
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: tweek-secrets
              key: minio_secret_key
        ports:
        - containerPort: 9000

---
kind: Service
apiVersion: v1
metadata:
  name: minio
spec:
  selector:
    app: minio
  ports:
    - port: 9000
      targetPort: 9000
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nats
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: nats
    spec:
      containers:
      - name: nats
        image: nats:1.0.4-linux
        ports:
        - containerPort: 4222

---
kind: Service
apiVersion: v1
metadata:
  name: nats
spec:
  selector:
    app: nats
  ports:
    - port: 4222
      targetPort: 4222
